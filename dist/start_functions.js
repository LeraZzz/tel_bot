'use strict';

module.exports = {

    sendStartMessage: function sendStartMessage(tg, message) {
        var text = /*'<a href="https://pp.userapi.com/c824202/v824202891/c644/liHWp02ZbJw.jpg">&#8205;</a>' */'<b>–û–∑–æ–Ω–æ–≤–∞—è –∫–æ—Å–º–µ—Ç–∏–∫–∞ OZONE BOX \n</b>' + '\n' + '–ó–¥–µ—Å—å –≤—ã –º–æ–∂–µ—Ç–µ —É–∑–Ω–∞—Ç—å –±–æ–ª—å—à–µ –æ –Ω–∞—à–µ–π –∫–æ–º–ø–∞–Ω–∏–∏ –∏ –ø—Ä–æ–¥—É–∫—Ü–∏–∏, –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∫–∞—Ç–∞–ª–æ–≥  –∫–æ—Å–º–µ—Ç–∏–∫–∏ –∏ –æ–¥–Ω–∏–º –∫–ª–∏–∫–æ–º –∫—É–ø–∏—Ç—å —Ç–æ–≤–∞—Ä, –∞ —Ç–∞–∫–∂–µ –∑–∞–∫–∞–∑–∞—Ç—å –∑–≤–æ–Ω–æ–∫ –Ω–∞—à–µ–≥–æ –º–µ–Ω–µ–¥–∂–µ—Ä–∞.\n' + '\n' + '\n';

        var catalogButton = {
            text: '–ù–∞—à–∏ —Ä–µ—à–µ–Ω–∏—è  üåü',
            callback_data: 'catalogCmd'

        };

        var FAQButton = {
            text: "FAQ  ‚ùì",
            callback_data: 'FAQCmd'
        };

        var aboutButton = {
            text: "–û –Ω–∞—Å  ‚≠êÔ∏è",
            callback_data: 'aboutCmd'
        };

        var principButton = {
            text: "–ü—Ä–∏–Ω—Ü–∏–ø –¥–µ–π—Å—Ç–≤–∏—è  üåê ",
            callback_data: 'principCmd'
        };

        var callBackButton = {
            text: "–û–±—Ä–∞—Ç–Ω—ã–π –∑–≤–æ–Ω–æ–∫  ‚òé",
            callback_data: 'callBackCmd'
        };

        var feedBackButton = {
            text: " –û—Å—Ç–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤ üòò",
            callback_data: 'feedBackCmd'
        };

        var goToBeforeAfter = {
            text: '–î–æ/–ü–æ—Å–ª–µ   üôÄüòª',
            callback_data: 'goToBeforeAfterCmd'

        };
        var options = Object.assign({}, {
            parse_mode: 'HTML',
            reply_markup: JSON.stringify({

                inline_keyboard: [[aboutButton], [principButton], [goToBeforeAfter], [catalogButton], [FAQButton], [callBackButton]]
            })
        });
        tg.sendMessage(message.chat.id, text, options);
    },

    sendStartMessage2: function sendStartMessage2(tg, callbackQuery) {
        var text = '<b>–û–∑–æ–Ω–æ–≤–∞—è –∫–æ—Å–º–µ—Ç–∏–∫–∞ OZONE BOX \n</b>' + '–ó–¥–µ—Å—å –≤—ã –º–æ–∂–µ—Ç–µ —É–∑–Ω–∞—Ç—å –±–æ–ª—å—à–µ –æ –Ω–∞—à–µ–π –∫–æ–º–ø–∞–Ω–∏–∏ –∏ –ø—Ä–æ–¥—É–∫—Ü–∏–∏, –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∫–∞—Ç–∞–ª–æ–≥  –∫–æ—Å–º–µ—Ç–∏–∫–∏ –∏ –æ–¥–Ω–∏–º –∫–ª–∏–∫–æ–º –∫—É–ø–∏—Ç—å —Ç–æ–≤–∞—Ä, –∞ —Ç–∞–∫–∂–µ –∑–∞–∫–∞–∑–∞—Ç—å –∑–≤–æ–Ω–æ–∫ –Ω–∞—à–µ–≥–æ –º–µ–Ω–µ–¥–∂–µ—Ä–∞.\n' + '\n' + '\n';

        var catalogButton = {
            text: '–ù–∞—à–∏ —Ä–µ—à–µ–Ω–∏—è  üåü',
            callback_data: 'catalogCmd'

        };

        var FAQButton = {
            text: "FAQ  ‚ùì",
            callback_data: 'FAQCmd'
        };

        var aboutButton = {
            text: "–û –Ω–∞—Å  ‚≠êÔ∏è",
            callback_data: 'aboutCmd'
        };

        var principButton = {
            text: "–ü—Ä–∏–Ω—Ü–∏–ø –¥–µ–π—Å—Ç–≤–∏—è  üåê ",
            callback_data: 'principCmd'
        };

        var callBackButton = {
            text: "–û–±—Ä–∞—Ç–Ω—ã–π –∑–≤–æ–Ω–æ–∫  ‚òé",
            callback_data: 'callBackCmd'
        };

        var goToBeforeAfter = {
            text: '–î–æ/–ü–æ—Å–ª–µ   üôÄüòª',
            callback_data: 'goToBeforeAfterCmd'

        };

        var feedBackButton = {
            text: " –û—Å—Ç–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤ üòò",
            callback_data: 'feedBackCmd'
        };

        var options = Object.assign({}, {
            parse_mode: 'HTML',
            reply_markup: JSON.stringify({

                inline_keyboard: [[aboutButton], [principButton], [goToBeforeAfter], [catalogButton], [FAQButton], [callBackButton]]
            })
        }, {
            message_id: callbackQuery.message.message_id,
            chat_id: callbackQuery.message.chat.id
        });
        tg.editMessageText(text, options);
    }
};